#!/bin/sh

BUILD_DIR=$1
CACHE_DIR=$2
METEOR_HOME=$BUILD_DIR/.meteor/local
PATH=$METEOR_HOME/usr/bin:$METEOR_HOME/usr/lib/meteor/bin:$PATH

fetch_meteor() {
  if [ -f "$METEOR_HOME/usr/bin/meteor" ] ; then
    # Skip if meteor is already fetched
    return
  fi

  eval $(curl https://install.meteor.com | grep '^VERSION=')
  PACKAGE=meteor_${VERSION}-1_amd64.deb

  echo "Fetching meteor deb package"
  curl -o "$CACHE_DIR/$PACKAGE" "https://d3sqy0vbqsdhku.cloudfront.net/${PACKAGE}"

  echo "Unpacking meteor"
  [ ! -d "$METEOR_HOME" ] && mkdir -p "$METEOR_HOME"
  ar p "$CACHE_DIR/$PACKAGE" data.tar.gz | tar -C "$METEOR_HOME" -zxf -
}

install_extra_packages() {
  echo "Installing extra packages"

  BLADE_TARBALL="$CACHE_DIR/blade.tgz"
  #if [ ! -f $BLADE_TARBALL ]; then
    echo "Installing blade"
    curl -o $BLADE_TARBALL https://loku-buildpacks.s3.amazonaws.com/meteor/blade.tgz
    tar xf $BLADE_TARBALL -C $METEOR_HOME/usr/lib/meteor/packages
  #fi
}

build() {
  ( 
    cd $BUILD_DIR
    echo "Building meteor bundle"
    meteor bundle $CACHE_DIR/bundle.tar.gz 
    mkdir -p $BUILD_DIR/.meteor/local/build
    tar -zxf $CACHE_DIR/bundle.tar.gz --strip-components 1 -C $BUILD_DIR/.meteor/local/build
    rm $CACHE_DIR/bundle.tar.gz
  )
}

[ ! -d $BUILD_DIR ] && mkdir $BUILD_DIR
[ ! -d $CACHE_DIR ] && mkdir $CACHE_DIR

fetch_meteor
install_extra_packages
build
